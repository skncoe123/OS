
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/shm.h>
#include<sys/stat.h>

#define SZ 4096

int main(){
	
	int shm_id;
	//key_t mykey;
	int *shm_ptr;
	int data,ret_val;
	int read_data;
	int pid;
	//mykey=ftok(".",'A');
	
	
	shm_id=shmget( IPC_PRIVATE , SZ , IPC_CREAT | 0666 );
	if(shm_id<0){
		printf("\n ERROR at addressing ,memory\n");
	}
	else{
		printf("Shared memory is created\n");
		printf("shared memory id  %d\n",shm_id);
		
		shm_ptr=(int*) shmat(shm_id,NULL,0);
			if((int) shm_ptr!=-1){
				printf("\nSHARED MEMORY IS ATTACHED TO \t%d\n",shm_ptr);
			}//if ptr
			printf("\nENTER THE DATA\n");
			scanf("%d",&data);
			*shm_ptr = data;
			//ret_val =shmdt((void *)shm_ptr);
			/*if(ret_val==0){
				printf("\n shared memory is sucessfully detached\n");
			}
			else{
				printf("shmdt srror");
			}*/
			
		pid=fork();
		if(pid==0){
			
			//shm_ptr=(int*) shmat(shm_id,NULL,0);
			if((int) shm_ptr!=-1){
			printf("\nSHARED MEMORY IS ATTACHED TO \t%d\n",shm_ptr);
			read_data=*shm_ptr;
			printf("data from shared memory \t %d",*shm_ptr);
		}//if ptr
		
			/*if(ret_val==0){
				printf("\n shared memory is sucessfully detached\n");
			}
			else{
				printf("shmdt srror");
			}*/
		
		}
		ret_val =shmdt((void *)shm_ptr);
		if(ret_val==0){
				printf("\n shared memory is successfully detached\n");
			}
			else{
				printf("shmdt srror");
			}
	}
return 0;
}


/*
OUTPUT:

aditya@aditya:~/Desktop$ gcc I3112_7b.c -o I3112_7b
aditya@aditya:~/Desktop$ ./I3112_7b
Shared memory is created
shared memory id  2

SHARED MEMORY IS ATTACHED TO 	2146213888

ENTER THE DATA
3112


SHARED MEMORY IS ATTACHED TO 	2146213888
 shared memory is successfully detached
data from shared memory 	 3112
 shared memory is successfully detached

*/

